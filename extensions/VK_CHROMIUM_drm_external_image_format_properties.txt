Name Strings

    VK_CHROMIUM_drm_external_image_format_properties

Extension Type

    Instance extension

Registered Extension Number

    Draft

Status

    Draft

Version

    0 (Early Draft)

Last Modified Date

    See git log.

IP Status

    TODO

Dependencies

    This extension is written against the Vulkan 1.0.32 specification [1].
    Requires VK_CHROMIUM_image_format_properties2

Contributors

    Chad Versace, Google <chadversary@chromium.org>

Contact

    Chad Versace <chadversary@chromium.org>

Overview

    TODO

New Object Types

    None

New Enum Constants

    Extends VkStructureType
      VK_STRUCTURE_TYPE_DRM_EXTERNAL_IMAGE_FORMAT_PROPERTIES_CHROMIUM
      VK_STRUCTURE_TYPE_DRM_EXTERNAL_IMAGE_LAYOUT_CHROMIUM

    Extends VkImageTiling
        VK_IMAGE_TILING_DRM_EXTERNAL_CHROMIUM

    Extends VkImageLayout
        VK_IMAGE_LAYOUT_DRM_EXTERNAL_CHROMIUM

New Enums

    None

New Structs

   typedef struct VkDrmExternalImageLayoutCHROMIUM {
       VkStructureType      sType;
       const void*          pNext;
       uint32_t             drmFourCC;
       uint64_t             drmModifier;
   } VkDrmExternalImageLayoutCHROMIUM;

   // Extends VkImageFormatProperties2CHROMIUM
   typedef struct VkDrmExternalImageFormatPropertiesCHROMIUM {
       VkStructureType                      sType;
       void*                                pNext;
       uint32_t                             externalLayoutCount;
       VkDrmExternalImageLayoutCHROMIUM     *pExternalLayouts;
   } VkDrmExternalImageFormatPropertiesCHROMIUM;

New Functions

   None

Description

    TODO

Issues

    1. Should this extension be merged with VK_CHROMIUM_drm_external_image?

       UNRESOLVED. The two extensions are so closely related that a merger
       feels natural. The Vulkan 1.0.32 spec, however, recommends they be kept
       separate.

       From the Vulkan 1.0.32 spec:

           For a set of global functionality that provides new instance-level
           and device-level commands, and can be enabled for a subset of
           devices, it is recommended that the functionality be partitioned
           across two extensionsâ€”one for the instance-level functionality, and
           one for the device-specific functionality. In this latter case, it
           is generally recommended that the two extensions have unique names.

References

    [1]: https://github.com/KhronosGroup/Vulkan-Docs/tree/v1.0-core-20161025

Version History

    See git log.
